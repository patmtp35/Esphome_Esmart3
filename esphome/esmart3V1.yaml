substitutions:
  name: esmart3v2-esp
  friendly_name: esmart3
  device_description: "Read Values of a Esmart3 via RS485"
  time_timezone: "Europe/Paris"
  tx_pin: GPIO1
  rx_pin: GPIO3
  

esp32:
  board: esp32dev
  framework:
    type: arduino

esphome:
  name: ${name}
  comment: ${device_description}
  project:
    name: "pat.esphome-esmart3-virtual-meter"
    version: 2.0.0

external_components:
  - source:
      type: git
      url: https://github.com/ssieb/esphome_components
    components: [ esmart3 ]

time:
  - platform: homeassistant
    timezone:  ${time_timezone} 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esmart3-Esp Fallback Hotspot"
    password: !secret ap_pwd

ota:
  password: !secret ota_pwd

logger:
  baud_rate: 0
  level: INFO

# Enable Home Assistant API
api:
  encryption:
    key: !secrect esmart3key

captive_portal:

## ---------------------------------------------------
## COMPONENT WEBSERVER (local hosted)
## ---------------------------------------------------
web_server:
  port: 80
  version: 2
  

#########
# UART ##
#########
uart:
    id: uart_bus
    tx_pin: GPIO1
    rx_pin: GPIO3
    baud_rate: 9600
    

###########
# SENSORS #
###########
#Etat de la connection
binary_sensor:
  - platform: status
    name: "${friendly_name} Status Esp32"

switch:    
  - platform: restart
    name: "${friendly_name} Restart Esp32"

text_sensor:
  # IP address #
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP address"
      icon: "mdi:network-outline"
    ssid:
      name: "${friendly_name} Connected SSID"
    bssid:
      name: "${friendly_name} Connected BSSID"

  - platform: version
    id: text_sensor_version
    name: "${friendly_name} ESPHome Version"

sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal Sensor"
    update_interval: 60s

  - platform: uptime
    name: "${friendly_name} Uptime Sensor"
    update_interval: 60s

  - platform: esmart3
    charge_mode:
      id: charge_mode
      name: "${friendly_name} charge_mode"
    input_voltage:
      id: input_voltage
      name: "${friendly_name} input_voltage"
      unit_of_measurement: "V"
      state_class: total_increasing
      device_class: "voltage"
      accuracy_decimals: 1      
    battery_voltage:
      id: battery_voltage
      name: "${friendly_name} battery_voltage"
      unit_of_measurement: "V"
      state_class: total_increasing
      device_class: "voltage"
      accuracy_decimals: 1        
    charging_current:
      id: charging_current
      name: "${friendly_name} charging_current"
      unit_of_measurement: "A"
      state_class: total_increasing
      device_class: "current"
      accuracy_decimals: 1
    load_voltage:
      id: load_voltage
      name: "${friendly_name} load_voltage"
      unit_of_measurement: "V"
      state_class: total_increasing
      device_class: "voltage"
      accuracy_decimals: 1        
    load_current:
      id: load_current
      name: "${friendly_name} load_current"
      unit_of_measurement: "A"
      state_class: total_increasing
      device_class: "current"
      accuracy_decimals: 1      
    charging_power:
      id: charging_power
      name: "${friendly_name} charging_power"
      unit_of_measurement: "W"
      state_class: total_increasing
      device_class: "power"
      accuracy_decimals: 1      
    load_power:
      id: load_power
      name: "${friendly_name} load_power"
      unit_of_measurement: "W"
      state_class: total_increasing
      device_class: "power"
      accuracy_decimals: 1         
    battery_temp:
      id: battery_temp
      name: "${friendly_name} battery_temp"
      unit_of_measurement: "°C"
      state_class: total_increasing
      device_class: "temperature"
      accuracy_decimals: 1         
    internal_temp:
      id: internal_temp
      name: "${friendly_name} internal_temp"
      unit_of_measurement: "°C"
      state_class: total_increasing
      device_class: "temperature"
      accuracy_decimals: 1 
    battery_level:
      id: battery_level
      name: "${friendly_name} battery_level"
      unit_of_measurement: "%"
      state_class: total_increasing
      device_class: "battery"
      accuracy_decimals: 1       